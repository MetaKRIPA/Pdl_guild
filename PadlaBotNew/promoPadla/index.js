const getRandomUser = require("./getRandomUser");
const chatId = -1002081745188;

async function promoBot() {
    try {
        const user = await getRandomUser();
        if(user === null) return await bot.telegram.sendMessage(chatId, "–ü–æ–¥—Ö–æ–¥—è—â–∏—Ö —é–∑–µ—Ä–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ", {parse_mode: 'HTML'});

        await bot.telegram.sendMessage(chatId, `ü§ñ –£—á–∞—Å—Ç–Ω–∏–∫ @${user.username} –±—ã–ª –≤—ã–±—Ä–∞–Ω –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã.`, {
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [
                    [{
                    text: '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                    callback_data: 'promo_buttonConfirm__' + user.telegram + "!" + user.username
                    }],[{
                    text: '‚ùå –ê–≤–∞',
                    callback_data: 'promo_buttonAvatar__' + user.telegram + "!" + user.username
                    }],[{
                    text: '‚ùå –°—Å—ã–ª–∫–∞',
                    callback_data: 'promo_buttonLink__' + user.telegram + "!" + user.username
                    }],[{
                    text: '‚ùå –ê–≤–∞ + –°—Å—ã–ª–∫–∞',
                    callback_data: 'promo_buttonAvatarAndLink__' + user.telegram + "!" + user.username
                    }],[{
                    text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å',
                    callback_data: 'promo_reload__' + user.telegram + "!" + user.username
                    }]
                ]
            }
        })

    } catch (e) {
        Logger.Error(Logger.Mode.CRON, e.message);
    }
}

module.exports = promoBot;