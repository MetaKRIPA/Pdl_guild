const getId = require("../getId");
const isGroup = require("../isGroup");
const getNFT = require("./getNFT");
const Markup = require("telegraf").Markup;
const getSaleNFT = require("./getSaleNFT");

module.exports = async function () {

    bot.hears('–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ NFT', async (ctx) => {
        try {
            if (await isGroup(ctx)) return;

            const dbData = await User.findOne({telegram: await getId(ctx), status:"authorization"});
            if(!dbData) return;
            
            Logger.Message(Logger.Mode.PRIVATE, `–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ NFT ( ${await getId(ctx)} )`)

            const buttonData = [];

            const _getNFT = await getNFT(dbData.wallet, dbData.telegram);
            const _getSaleNFT = await getSaleNFT(dbData.wallet, dbData.telegram);
            const nftUser = _getNFT.concat(_getSaleNFT);

            if(nftUser.length !== 0){

                await bot.telegram.sendMessage(await getId(ctx), "ü•≥ –ù–∞–π–¥–µ–Ω–æ, "+nftUser.length+" <b>PADLA NFT</b>\n\n<u>‚úñÔ∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ–± –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –∏–∑ –ì–∏–ª—å–¥–∏–∏ –æ—Ç–º–µ–Ω–µ–Ω–æ</u>",
                    {
                        parse_mode: 'Html',
                        ...Markup.keyboard([
                            ['üë• –ö–∞–Ω–∞–ª—ã','üí¨ –ß–∞—Ç—ã'],
                            ['üë§ –ü—Ä–æ—Ñ–∏–ª—å', '‚úñÔ∏è –í—ã–π—Ç–∏']
                        ]).resize(),
                    });

                await User.updateOne({telegram: dbData.telegram}, {nfts: nftUser, statusNFT: true}).then(() => {
                    Logger.Message(Logger.Mode.DATABASE, `–û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT ( ${dbData.telegram} )`);
                });

            }else{
                 await ctx.reply("ü´• –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –≤–∞—à–µ–º –∫–æ—à–µ–ª—å–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π <b><a href='https://getgems.io/collection/padla-bear'>PADLA NFT</a></b>",
                    {
                        parse_mode: 'Html',
                        ...Markup.keyboard([
                            ['–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ NFT'],
                            ['üë• –ö–∞–Ω–∞–ª—ã','üí¨ –ß–∞—Ç—ã'],
                            ['üë§ –ü—Ä–æ—Ñ–∏–ª—å', '‚úñÔ∏è –í—ã–π—Ç–∏']
                        ]).resize(),
                    });
            }

        } catch (e) {
            Logger.Error(Logger.Mode.PRIVATE, e.message + ` ${await getId(ctx)}`);
        }
    });

}