const Markup = require("telegraf").Markup;
const isGroup = require("../isGroup");
const getId = require("../getId");
const checkGroup = require("./checkGroup");

module.exports = async function () {
    await bot.on('new_chat_members', async (ctx) => {
        try {

            if (!await isGroup(ctx)) return;

            if(!checkGroup(ctx.update.message.chat.id)) {

                //await ctx.reply("–í—Å–µ –ü–∞–¥–ª–∞–º –ø—Ä–∏–≤–µ—Ç –æ—Ç –±–æ—Ç–∞");

                const data = await User.findOne({telegram: await getId(ctx)});

                if (!data) {
                    await bot.telegram.kickChatMember(ctx.update.message.chat.id, ctx.update.message.new_chat_member.id);
                    await new RemoveUser({telegram: ctx.update.message.chat.id}).save(async () => {
                        try {
                            Logger.Message(Logger.Mode.DATABASE, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ–≥–æ ( ${user.telegram} )`);
                        } catch (e) {
                            Logger.Error(Logger.Mode.DATABASE, e.message)
                        }
                    })
                    Logger.Message(Logger.Mode.REMOVE, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –ß–∞—Ç: ${ctx.update.message.chat.id} | –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.update.message.new_chat_member.id}`);
                    return;
                }
            }

            else{

                //https://imgur.com/38STu8X
                
                return await ctx.replyWithVideo('https://padla.qteam.digital/welcome.gif',
                    {
                        caption: `–ü—Ä–∏–≤–µ—Ç ${ctx.update.message.new_chat_member.first_name}, —Ç—ã –Ω–∞ <b>PADLA</b> —Ä–∞–π–æ–Ω–µ! üëπ –ß–µ –∫–∞–∫ –æ–Ω–æ?\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø—Ä–æ–µ–∫—Ç–µ, –∂–º–∏ "<b>–ò–ù–§–ê</b>"\n\n–ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å <b>PADLA NFT</b>, –∂–º–∏ "<b>–ì–∏–ª—å–¥–∏—è</b>" –∏ –≤—Å—Ç—É–ø–∞–π –≤ –Ω–∞—à–∏ —Ä—è–¥—ã ü§ñ\n\n<u>–ù—É, –∞ –µ—Å–ª–∏ —Ç—ã —É–∂–µ —Å–æ –≤—Å–µ–º –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è, –Ω–æ –æ—Å—Ç–∞–ª–∏—Å—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –∑–∞–¥–∞–≤–∞–π –∏—Ö –ø—Ä—è–º–æ –∑–¥–µ—Å—å. –ò –º—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –¥–æ –∫–æ–Ω—Ü–∞ –≤–æ –≤—Å—ë–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è</u> ü§ó`,
                        parse_mode: 'Html',
                        reply_markup: {
                            inline_keyboard: [
                                [ { text: "üîé –ò–ù–§–ê", url: "https://t.me/PADLA_PROJECT/109" }, { text: "üòé –ì–ò–õ–¨–î–ò–Ø", url: "https://t.me/padlanft_bot" } ],
                            ]
                        }
                    });


            }

        } catch (e) {
            Logger.Error(Logger.Mode.GROUP, e.message);
        }
    });

}