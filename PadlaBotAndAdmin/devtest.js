const getId = require("./getId");
const Markup = require("telegraf").Markup;

module.exports = async function () {

    bot.hears('/devtest', async (ctx) => {
        try {
            Logger.Message(Logger.Mode.SERVER, `–í—ã–∑–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ( ${await getId(ctx)} )`);

            //Chat
            //await bot.telegram.kickChatMember(-1001722834076, 1471123906);
            //await bot.telegram.unbanChatMember(-1001722834076, 1471123906);

            //Canal
            //await bot.telegram.kickChatMember(-1001617337493, 1471123906);
            //await bot.telegram.unbanChatMember(-1001617337493, 436650398);

            /*await ctx.reply("–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏", {
                reply_markup: 'markdown',
                parse_mode: 'Html',
                ...Markup.keyboard([
                    '–û–ø–ª–∞—Ç–∏–ª'
                ]).resize()})*/

            await ctx.replyWithVideo('https://padla.qteam.digital/welcome.gif',
                {
                    caption: `–ü—Ä–∏–≤–µ—Ç, —Ç—ã –Ω–∞ <b>PADLA</b> —Ä–∞–π–æ–Ω–µ! üëπ –ß–µ –∫–∞–∫ –æ–Ω–æ?\n\n–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –ø—Ä–æ–µ–∫—Ç–µ, –∂–º–∏ "<b>–ò–ù–§–ê</b>"\n\n–ï—Å–ª–∏ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å <b>PADLA NFT</b>, –∂–º–∏ "<b>–ì–∏–ª—å–¥–∏—è</b>" –∏ –≤—Å—Ç—É–ø–∞–π –≤ –Ω–∞—à–∏ —Ä—è–¥—ã ü§ñ\n\n<u>–ù—É, –∞ –µ—Å–ª–∏ —Ç—ã —É–∂–µ —Å–æ –≤—Å–µ–º –æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è, –Ω–æ –æ—Å—Ç–∞–ª–∏—Å—å –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –∑–∞–¥–∞–≤–∞–π –∏—Ö –ø—Ä—è–º–æ –∑–¥–µ—Å—å. –ò –º—ã –ø–æ–º–æ–∂–µ–º —Ç–µ–±–µ –¥–æ –∫–æ–Ω—Ü–∞ –≤–æ –≤—Å—ë–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è</u> ü§ó`,
                    parse_mode: 'Html',
                    reply_markup: {
                        inline_keyboard: [
                            [ { text: "üîé –ò–ù–§–ê", url: "https://t.me/PADLA_PROJECT/109" }, { text: "üòé –ì–ò–õ–¨–î–ò–Ø", url: "https://t.me/padlanft_bot" } ],
                        ]
                    }
                });



        } catch (e) {
            Logger.Error(Logger.Mode.PRIVATE, e.message);
        }
    });

}